<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
   <Style TargetType="{x:Type TextBox}">
      <Setter Property="Foreground" Value="{DynamicResource _inputForgroundBrush}" />
      <Setter Property="SnapsToDevicePixels" Value="True" />
      <Setter Property="OverridesDefaultStyle" Value="True" />
      <Setter Property="FocusVisualStyle" Value="{x:Null}" />
      <Setter Property="AllowDrop" Value="true" />
      <Setter Property="CaretBrush" Value="{DynamicResource _inputForgroundBrush}" />
      <Setter Property="ContextMenu">
         <Setter.Value>
            <ContextMenu Style="{DynamicResource _contextMenuStyle}">
               <MenuItem Command="Cut" Header="Cut" />
               <MenuItem Command="Copy" Header="Copy" />
               <MenuItem Command="Paste" Header="Paste" />
               <Separator />
               <MenuItem Command="SelectAll" Header="Select All" />
            </ContextMenu>
         </Setter.Value>
      </Setter>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type TextBoxBase}">
               <Border Name="Border"
                       Padding="2"
                       Background="{DynamicResource _inputBackgroundBrush}"
                       BorderBrush="{DynamicResource _inputBorderBrush}"
                       BorderThickness="1">
                  <ScrollViewer x:Name="PART_ContentHost"
                                Margin="0"
                                Focusable="False"
                                KeyboardNavigation.TabNavigation="None" />
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource _inputBorderHoverBrush}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="_searchBoxBase" TargetType="{x:Type TextBox}">
      <Setter Property="ContextMenu">
         <Setter.Value>
            <ContextMenu Style="{DynamicResource _contextMenuStyle}">
               <MenuItem Command="Cut" Header="Cut" />
               <MenuItem Command="Copy" Header="Copy" />
               <MenuItem Command="Paste" Header="Paste" />
               <Separator />
               <MenuItem Command="SelectAll" Header="Select All" />
            </ContextMenu>
         </Setter.Value>
      </Setter>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type TextBoxBase}">
               <Border Name="Border"
                       Padding="2"
                       Background="Transparent"
                       BorderBrush="{DynamicResource _contentBorderBrush}"
                       BorderThickness="1">
                  <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource _inputBorderHoverBrush}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="_mainTextboxStyle"
          BasedOn="{StaticResource {x:Type TextBox}}"
          TargetType="{x:Type TextBox}">
      <Setter Property="IsTabStop" Value="False" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type TextBox}">
               <Grid>
                  <TextBox x:Name="textSource"
                           Height="22"
                           VerticalContentAlignment="Center"
                           Panel.ZIndex="2"
                           Background="Transparent"
                           CaretBrush="{DynamicResource _inputForgroundBrush}"
                           Foreground="{DynamicResource _inputForgroundBrush}"
                           Style="{DynamicResource _searchBoxBase}"
                           Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                  <TextBlock Panel.ZIndex="1"
                             Background="{DynamicResource _inputBackgroundBrush}"
                             Text="{TemplateBinding Tag}">
                     <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                           <Setter Property="Padding" Value="5,3,0,0" />
                           <Setter Property="Height" Value="22" />
                           <Setter Property="VerticalAlignment" Value="Center" />
                           <Setter Property="Foreground" Value="Transparent" />
                           <Style.Triggers>
                              <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                 <Setter Property="Foreground" Value="{DynamicResource _secondaryTextBrush}" />
                              </DataTrigger>
                              <MultiDataTrigger>
                                 <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=IsFocused, Source={x:Reference textSource}}" Value="True" />
                                    <Condition Binding="{Binding Path=IsReadOnly, Source={x:Reference textSource}}" Value="False" />
                                 </MultiDataTrigger.Conditions>
                                 <MultiDataTrigger.Setters>
                                    <Setter Property="Foreground" Value="Transparent" />
                                 </MultiDataTrigger.Setters>
                              </MultiDataTrigger>
                           </Style.Triggers>
                        </Style>
                     </TextBlock.Style>
                  </TextBlock>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="_readOnlyTextboxStyle"
          BasedOn="{StaticResource {x:Type TextBox}}"
          TargetType="{x:Type TextBox}">
      <Setter Property="Foreground" Value="{DynamicResource _primaryTextBrush}" />
      <Setter Property="SnapsToDevicePixels" Value="True" />
      <Setter Property="OverridesDefaultStyle" Value="True" />
      <Setter Property="FocusVisualStyle" Value="{x:Null}" />
      <Setter Property="AllowDrop" Value="true" />
      <Setter Property="IsReadOnly" Value="true" />
      <Setter Property="CaretBrush" Value="{DynamicResource _primaryTextBrush}" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type TextBoxBase}">
               <Border Name="Border"
                       Padding="0"
                       Background="Transparent"
                       BorderBrush="Transparent"
                       BorderThickness="0">
                  <ScrollViewer x:Name="PART_ContentHost"
                                Margin="0"
                                Focusable="False"
                                KeyboardNavigation.TabNavigation="None" />
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
</ResourceDictionary>