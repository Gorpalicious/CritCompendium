<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ovm="clr-namespace:CritCompendium.ViewModels.ObjectViewModels"
                    xmlns:views="clr-namespace:CritCompendium.Views">
   <DataTemplate x:Key="_encounterDisplayTemplate" DataType="{x:Type ovm:EncounterViewModel}">
      <Grid>
         <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
         </Grid.RowDefinitions>

         <StackPanel Grid.Row="0" Margin="0,-4,10,0">
            <Grid>
               <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
               </Grid.ColumnDefinitions>
               <TextBlock Grid.Column="0"
                          FontSize="20"
                          FontWeight="DemiBold"
                          Foreground="{DynamicResource _primaryTextBrush}"
                          Text="{Binding Name}"
                          TextTrimming="CharacterEllipsis" />

               <Button Grid.Column="1"
                       Margin="5,0"
                       Padding="2"
                       Command="{Binding Path=DataContext.EditEncounterCommand, RelativeSource={RelativeSource AncestorType={x:Type views:EncountersView}}}"
                       CommandParameter="{Binding}"
                       IsEnabled="{Binding StateIsStoppedOrPaused}"
                       Style="{DynamicResource _secondaryButtonStyle}"
                       ToolTip="Edit Encounter">
                  <Image Width="16"
                         Height="16"
                         VerticalAlignment="Center"
                         Source="{DynamicResource _editImage}" />
               </Button>

               <Button Grid.Column="2"
                       Margin="5,0"
                       Padding="2"
                       Command="{Binding Path=DataContext.ExportEncounterCommand, RelativeSource={RelativeSource AncestorType={x:Type views:EncountersView}}}"
                       CommandParameter="{Binding}"
                       Style="{DynamicResource _secondaryButtonStyle}"
                       ToolTip="Export Encounter">
                  <Image Width="16"
                         Height="16"
                         VerticalAlignment="Center"
                         Source="{DynamicResource _exportImage}" />
               </Button>
            </Grid>
         </StackPanel>

         <Border Grid.Row="1"
                 Margin="0,10,20,5"
                 Padding="10,0"
                 BorderBrush="{DynamicResource _contentBorderBrush}"
                 BorderThickness="0,0,0,1">
            <Grid>
               <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
               </Grid.ColumnDefinitions>

               <Button Grid.Column="0"
                       Margin="0,0,15,0"
                       Command="{Binding PlayEncounterCommand}"
                       Style="{DynamicResource _secondaryButtonStyle}"
                       ToolTip="Play"
                       Visibility="{Binding StateIsStoppedOrPaused, Converter={StaticResource _boolVisibilityConverter}}">
                  <Image Width="16"
                         Height="16"
                         VerticalAlignment="Center"
                         Source="{DynamicResource _playImage}" />
               </Button>

               <Button Grid.Column="1"
                       Margin="0,0,15,0"
                       Command="{Binding PauseEncounterCommand}"
                       Style="{DynamicResource _secondaryButtonStyle}"
                       ToolTip="Pause"
                       Visibility="{Binding StateIsPlaying, Converter={StaticResource _boolVisibilityConverter}}">
                  <Image Width="16"
                         Height="16"
                         VerticalAlignment="Center"
                         Source="{DynamicResource _pauseImage}" />
               </Button>

               <Button Grid.Column="2"
                       Margin="5,0,0,0"
                       Command="{Binding StopEncounterCommand}"
                       Style="{DynamicResource _secondaryButtonStyle}"
                       ToolTip="Stop">
                  <Image Width="16"
                         Height="16"
                         VerticalAlignment="Center"
                         Source="{DynamicResource _stopImage}" />
               </Button>

               <StackPanel Grid.Column="4"
                           Width="120"
                           Margin="0,0,10,0">
                  <TextBlock Margin="0,10,0,2"
                             FontSize="10"
                             Foreground="{DynamicResource _secondaryTextBrush}"
                             Text="Current Initiative" />
                  <TextBlock Margin="0,0,0,10"
                             Foreground="{DynamicResource _primaryTextBrush}"
                             Text="{Binding CurrentInitiative}"
                             TextTrimming="CharacterEllipsis" />
               </StackPanel>

               <StackPanel Grid.Column="5"
                           Width="120"
                           Margin="0,0,10,0">
                  <TextBlock Margin="0,10,0,2"
                             FontSize="10"
                             Foreground="{DynamicResource _secondaryTextBrush}"
                             Text="Current Round" />
                  <TextBlock Margin="0,0,0,10"
                             Foreground="{DynamicResource _primaryTextBrush}"
                             Text="{Binding Round}"
                             TextTrimming="CharacterEllipsis" />
               </StackPanel>

               <StackPanel Grid.Column="6" Width="120">
                  <TextBlock Margin="0,10,0,2"
                             FontSize="10"
                             Foreground="{DynamicResource _secondaryTextBrush}"
                             Text="Elapsed Time" />
                  <TextBlock Margin="0,0,0,10"
                             Foreground="{DynamicResource _primaryTextBrush}"
                             Text="{Binding TimeElapsed}"
                             TextTrimming="CharacterEllipsis" />
               </StackPanel>

               <Button Grid.Column="8"
                       Margin="0,0,20,0"
                       Command="{Binding ViewNotesCommand}"
                       Style="{DynamicResource _secondaryButtonStyle}"
                       ToolTip="View Notes">
                  <Image Width="16"
                         Height="16"
                         VerticalAlignment="Center"
                         Source="{DynamicResource _notesImage}" />
               </Button>

               <Button Grid.Column="9"
                       Command="{Binding NextInitiativeCommand}"
                       Style="{DynamicResource _secondaryButtonStyle}"
                       ToolTip="Next Initiative">
                  <Image Width="16"
                         Height="16"
                         VerticalAlignment="Center"
                         Source="{DynamicResource _nextImage}" />
               </Button>
            </Grid>
         </Border>

         <!--<ItemsControl Grid.Row="3"
                              ItemsSource="{Binding CreaturesExpanded}"
                              Style="{DynamicResource _virtualizedItemsControlStyle}"
                              Tag="No Creatures Found" />-->

         <ScrollViewer Grid.Row="3">
            <ItemsControl ItemsSource="{Binding CreaturesExpanded}">
               <ItemsControl.Style>
                  <Style TargetType="ItemsControl">
                     <Style.Triggers>
                        <Trigger Property="HasItems" Value="False">
                           <Setter Property="Template">
                              <Setter.Value>
                                 <ControlTemplate>
                                    <TextBlock Margin="0,10,0,0"
                                               Foreground="{DynamicResource _secondaryTextBrush}"
                                               Text="No Creatures Found" />
                                 </ControlTemplate>
                              </Setter.Value>
                           </Setter>
                        </Trigger>
                     </Style.Triggers>
                  </Style>
               </ItemsControl.Style>
            </ItemsControl>
         </ScrollViewer>
      </Grid>
   </DataTemplate>

   <DataTemplate DataType="{x:Type ovm:EncounterCharacterViewModel}">
      <Border Margin="0,5,0,5"
              Padding="8,5,6,5"
              Background="Transparent"
              BorderThickness="1">
         <Border.Style>
            <Style TargetType="Border">
               <Setter Property="BorderBrush" Value="{DynamicResource _contentBorderBrush}" />
               <Style.Triggers>
                  <DataTrigger Binding="{Binding Selected}" Value="True">
                     <Setter Property="BorderBrush" Value="{DynamicResource _accentBrush}" />
                  </DataTrigger>
               </Style.Triggers>
            </Style>
         </Border.Style>

         <Expander>
            <Expander.Header>
               <Grid>
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="Auto" />
                     <ColumnDefinition Width="Auto" />
                     <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <Grid Grid.Column="0" Margin="0,0,15,0">
                     <Image Width="32"
                            Height="32"
                            VerticalAlignment="Center"
                            Source="{DynamicResource _initiativeImage}" />
                     <TextBlock HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource _primaryTextBrush}"
                                Text="{Binding Initiative, TargetNullValue=0}"
                                TextWrapping="Wrap" />
                  </Grid>

                  <TextBlock Grid.Column="1"
                             Width="143"
                             Margin="0,0,10,0"
                             VerticalAlignment="Center"
                             FontSize="14"
                             Foreground="{DynamicResource _primaryTextBrush}"
                             Text="{Binding Name}"
                             TextTrimming="CharacterEllipsis" />

                  <StackPanel Grid.Column="2"
                              Margin="0,0,10,0"
                              VerticalAlignment="Center">
                     <Grid>
                        <Grid.ColumnDefinitions>
                           <ColumnDefinition Width="Auto" />
                           <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0"
                                   Margin="0,0,0,2"
                                   FontSize="10"
                                   Foreground="{DynamicResource _secondaryTextBrush}"
                                   Text="Conditions" />

                        <Button Grid.Column="1"
                                Margin="3,-4,5,0"
                                Padding="2"
                                Command="{Binding ShowAddConditionDialogCommand}"
                                Style="{DynamicResource _secondaryButtonStyle}"
                                ToolTip="Add Condition">
                           <Image Width="14"
                                  Height="14"
                                  VerticalAlignment="Center"
                                  Source="{DynamicResource _addImage}" />
                        </Button>
                     </Grid>

                     <ItemsControl ItemsSource="{Binding Conditions}">
                        <ItemsControl.Style>
                           <Style TargetType="ItemsControl">
                              <Style.Triggers>
                                 <Trigger Property="HasItems" Value="False">
                                    <Setter Property="Template">
                                       <Setter.Value>
                                          <ControlTemplate>
                                             <TextBlock Margin="0,0,0,6"
                                                        Padding="0,4,0,0"
                                                        Foreground="{DynamicResource _primaryTextBrush}"
                                                        Text="None" />
                                          </ControlTemplate>
                                       </Setter.Value>
                                    </Setter>
                                 </Trigger>
                              </Style.Triggers>
                           </Style>
                        </ItemsControl.Style>

                        <ItemsControl.ItemsPanel>
                           <ItemsPanelTemplate>
                              <WrapPanel />
                           </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                           <DataTemplate>
                              <Border Width="125"
                                      Margin="0,0,10,2"
                                      Padding="5,0,5,0"
                                      Style="{DynamicResource _interactiveborderStyle}">
                                 <Border.InputBindings>
                                    <MouseBinding Command="{Binding DataContext.ViewConditionCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                  CommandParameter="{Binding}"
                                                  MouseAction="LeftClick" />
                                 </Border.InputBindings>

                                 <Grid>
                                    <Grid.ColumnDefinitions>
                                       <ColumnDefinition Width="*" />
                                       <ColumnDefinition Width="20" />
                                       <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Foreground="{DynamicResource _primaryTextBrush}"
                                               Text="{Binding NameAndLevel}"
                                               TextTrimming="CharacterEllipsis"
                                               ToolTip="{Binding NameAndLevel}" />

                                    <Button Name="EditButton"
                                            Grid.Column="1"
                                            Padding="2"
                                            Command="{Binding DataContext.ShowEditConditionDialogCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                            CommandParameter="{Binding}"
                                            Style="{DynamicResource _secondaryButtonStyle}"
                                            ToolTip="Edit Condition"
                                            Visibility="Hidden">
                                       <Image Width="12"
                                              Height="12"
                                              VerticalAlignment="Center"
                                              Source="{DynamicResource _editImage}" />
                                    </Button>

                                    <Button Name="RemoveButton"
                                            Grid.Column="2"
                                            Padding="2"
                                            Command="{Binding DataContext.RemoveConditionCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                            CommandParameter="{Binding}"
                                            Style="{DynamicResource _secondaryButtonStyle}"
                                            ToolTip="Remove Condition"
                                            Visibility="Hidden">
                                       <Image Width="12"
                                              Height="12"
                                              VerticalAlignment="Center"
                                              Source="{DynamicResource _removeImage}" />
                                    </Button>
                                 </Grid>
                              </Border>

                              <DataTemplate.Triggers>
                                 <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="EditButton" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
                                 </Trigger>
                              </DataTemplate.Triggers>
                           </DataTemplate>
                        </ItemsControl.ItemTemplate>
                     </ItemsControl>
                  </StackPanel>
               </Grid>
            </Expander.Header>

            <WrapPanel Margin="28,0,0,0">
               <StackPanel Width="190" Margin="0,0,10,0">
                  <TextBlock Margin="0,10,0,2"
                             FontSize="10"
                             Foreground="{DynamicResource _secondaryTextBrush}"
                             Text="Level" />
                  <TextBlock Margin="0,0,0,10"
                             Foreground="{DynamicResource _primaryTextBrush}"
                             Text="{Binding Level}"
                             TextWrapping="Wrap" />
               </StackPanel>

               <StackPanel Width="190" Margin="0,0,10,0">
                  <TextBlock Margin="0,10,0,2"
                             FontSize="10"
                             Foreground="{DynamicResource _secondaryTextBrush}"
                             Text="Max HP" />
                  <TextBlock Margin="0,0,0,10"
                             Foreground="{DynamicResource _primaryTextBrush}"
                             Text="{Binding MaxHP}"
                             TextWrapping="Wrap" />
               </StackPanel>

               <StackPanel Width="190" Margin="0,0,10,0">
                  <TextBlock Margin="0,10,0,2"
                             FontSize="10"
                             Foreground="{DynamicResource _secondaryTextBrush}"
                             Text="AC" />
                  <TextBlock Margin="0,0,0,10"
                             Foreground="{DynamicResource _primaryTextBrush}"
                             Text="{Binding AC}"
                             TextWrapping="Wrap" />
               </StackPanel>

               <StackPanel Width="190" Margin="0,0,10,0">
                  <TextBlock Margin="0,10,0,2"
                             FontSize="10"
                             Foreground="{DynamicResource _secondaryTextBrush}"
                             Text="Save DC" />
                  <TextBlock Margin="0,0,0,10"
                             Foreground="{DynamicResource _primaryTextBrush}"
                             Text="{Binding SpellSaveDC}"
                             TextWrapping="Wrap" />
               </StackPanel>

               <StackPanel Width="190" Margin="0,0,10,0">
                  <TextBlock Margin="0,10,0,2"
                             FontSize="10"
                             Foreground="{DynamicResource _secondaryTextBrush}"
                             Text="Passive Perception" />
                  <TextBlock Margin="0,0,0,10"
                             Foreground="{DynamicResource _primaryTextBrush}"
                             Text="{Binding PassivePerception}"
                             TextWrapping="Wrap" />
               </StackPanel>

               <StackPanel Width="190" Margin="0,0,10,0">
                  <TextBlock Margin="0,10,0,2"
                             FontSize="10"
                             Foreground="{DynamicResource _secondaryTextBrush}"
                             Text="Passive Investigation" />
                  <TextBlock Margin="0,0,0,10"
                             Foreground="{DynamicResource _primaryTextBrush}"
                             Text="{Binding PassiveInvestigation}"
                             TextWrapping="Wrap" />
               </StackPanel>
            </WrapPanel>
         </Expander>
      </Border>
   </DataTemplate>

   <DataTemplate DataType="{x:Type ovm:EncounterMonsterViewModel}">
      <Border Margin="0,5,0,5"
              Padding="8,5,6,5"
              Background="Transparent"
              BorderThickness="1">
         <Border.Style>
            <Style TargetType="Border">
               <Setter Property="BorderBrush" Value="{DynamicResource _contentBorderBrush}" />
               <Style.Triggers>
                  <DataTrigger Binding="{Binding Selected}" Value="True">
                     <Setter Property="BorderBrush" Value="{DynamicResource _accentBrush}" />
                  </DataTrigger>
               </Style.Triggers>
            </Style>
         </Border.Style>

         <Expander>
            <Expander.Header>
               <Grid>
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="Auto" />
                     <ColumnDefinition Width="Auto" />
                     <ColumnDefinition Width="Auto" />
                     <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <Grid Grid.Column="0" Margin="0,0,15,0">
                     <Image Width="32"
                            Height="32"
                            VerticalAlignment="Center"
                            Source="{DynamicResource _initiativeImage}" />
                     <TextBlock HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource _primaryTextBrush}"
                                Text="{Binding Initiative, TargetNullValue=0}"
                                TextWrapping="Wrap" />
                  </Grid>

                  <TextBlock Grid.Column="1"
                             Width="143"
                             Margin="0,0,10,0"
                             VerticalAlignment="Center"
                             FontSize="14"
                             Foreground="{DynamicResource _primaryTextBrush}"
                             Text="{Binding Name}"
                             TextTrimming="CharacterEllipsis"
                             ToolTip="{Binding Name}" />

                  <StackPanel Grid.Column="2"
                              Width="180"
                              Margin="0,0,20,0">
                     <TextBlock Margin="0,0,0,10"
                                FontSize="10"
                                Foreground="{DynamicResource _secondaryTextBrush}"
                                Text="HP" />
                     <Border Background="DimGray" Cursor="Hand">
                        <Border.InputBindings>
                           <MouseBinding Command="{Binding ShowHPDialogCommand}" MouseAction="LeftClick" />
                        </Border.InputBindings>

                        <Grid>
                           <Grid>
                              <Grid.ColumnDefinitions>
                                 <ColumnDefinition Width="{Binding CurrentHP, Converter={StaticResource _gridLengthConverter}, ConverterParameter=true}" />
                                 <ColumnDefinition Width="{Binding LessHP, Converter={StaticResource _gridLengthConverter}, ConverterParameter=true}" />
                              </Grid.ColumnDefinitions>

                              <Rectangle Grid.Column="0" Fill="DarkRed" />
                           </Grid>

                           <TextBlock HorizontalAlignment="Center"
                                      Foreground="{DynamicResource _barForgroundBrush}"
                                      Text="{Binding HPDisplay}" />
                        </Grid>
                     </Border>
                  </StackPanel>

                  <StackPanel Grid.Column="3"
                              Margin="0,0,10,0"
                              VerticalAlignment="Center">
                     <Grid>
                        <Grid.ColumnDefinitions>
                           <ColumnDefinition Width="Auto" />
                           <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0"
                                   Margin="0,0,0,2"
                                   FontSize="10"
                                   Foreground="{DynamicResource _secondaryTextBrush}"
                                   Text="Conditions" />

                        <Button Grid.Column="1"
                                Margin="3,-4,5,0"
                                Padding="2"
                                Command="{Binding ShowAddConditionDialogCommand}"
                                Style="{DynamicResource _secondaryButtonStyle}"
                                ToolTip="Add Condition">
                           <Image Width="14"
                                  Height="14"
                                  VerticalAlignment="Center"
                                  Source="{DynamicResource _addImage}" />
                        </Button>
                     </Grid>

                     <ItemsControl ItemsSource="{Binding Conditions}">
                        <ItemsControl.Style>
                           <Style TargetType="ItemsControl">
                              <Style.Triggers>
                                 <Trigger Property="HasItems" Value="False">
                                    <Setter Property="Template">
                                       <Setter.Value>
                                          <ControlTemplate>
                                             <TextBlock Margin="0,0,0,6"
                                                        Padding="0,4,0,0"
                                                        Foreground="{DynamicResource _primaryTextBrush}"
                                                        Text="None" />
                                          </ControlTemplate>
                                       </Setter.Value>
                                    </Setter>
                                 </Trigger>
                              </Style.Triggers>
                           </Style>
                        </ItemsControl.Style>

                        <ItemsControl.ItemsPanel>
                           <ItemsPanelTemplate>
                              <WrapPanel />
                           </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                           <DataTemplate>
                              <Border Width="125"
                                      Margin="0,0,10,2"
                                      Padding="5,0,5,0"
                                      Style="{DynamicResource _interactiveborderStyle}">
                                 <Border.InputBindings>
                                    <MouseBinding Command="{Binding DataContext.ViewConditionCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                  CommandParameter="{Binding}"
                                                  MouseAction="LeftClick" />
                                 </Border.InputBindings>

                                 <Grid>
                                    <Grid.ColumnDefinitions>
                                       <ColumnDefinition Width="*" />
                                       <ColumnDefinition Width="20" />
                                       <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Foreground="{DynamicResource _primaryTextBrush}"
                                               Text="{Binding Name}"
                                               TextTrimming="CharacterEllipsis"
                                               ToolTip="{Binding Name}" />

                                    <Button Name="EditButton"
                                            Grid.Column="1"
                                            Padding="2"
                                            Command="{Binding DataContext.EditConditionCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                            CommandParameter="{Binding}"
                                            Style="{DynamicResource _secondaryButtonStyle}"
                                            ToolTip="Edit Condition"
                                            Visibility="Hidden">
                                       <Image Width="12"
                                              Height="12"
                                              VerticalAlignment="Center"
                                              Source="{DynamicResource _editImage}" />
                                    </Button>

                                    <Button Name="RemoveButton"
                                            Grid.Column="2"
                                            Padding="2"
                                            Command="{Binding DataContext.RemoveConditionCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                            CommandParameter="{Binding}"
                                            Style="{DynamicResource _secondaryButtonStyle}"
                                            ToolTip="Remove Condition"
                                            Visibility="Hidden">
                                       <Image Width="12"
                                              Height="12"
                                              VerticalAlignment="Center"
                                              Source="{DynamicResource _removeImage}" />
                                    </Button>
                                 </Grid>
                              </Border>

                              <DataTemplate.Triggers>
                                 <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="EditButton" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
                                 </Trigger>
                              </DataTemplate.Triggers>
                           </DataTemplate>
                        </ItemsControl.ItemTemplate>
                     </ItemsControl>
                  </StackPanel>
               </Grid>
            </Expander.Header>

            <ContentPresenter Margin="28,0,0,10" Content="{Binding MonsterViewModel}" />
         </Expander>
      </Border>
   </DataTemplate>
</ResourceDictionary>